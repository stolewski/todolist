{"version":3,"sources":["toDo/ToDoItem/ToDoItem.js","toDo/todosData.js","App.js","index.js"],"names":["ToDoItem","props","className","type","onChange","handleChange","defaultChecked","completed","description","onClick","removeItem","todosData","id","text","App","dataList","JSON","parse","localStorage","getItem","useState","todoItems","setTodoItems","newTask","setNewTask","useEffect","setItem","stringify","newId","array","length","i","max","activeTasks","filter","task","completedTasks","finalTasks","map","it","index","el","indexOf","newList","listChange","result","ind","removeHandler","e","inputValue","target","value","placeholder","objTask","updList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAmBeA,EAhBE,SAAAC,GACf,OACE,sBAAKC,UAAU,YAAf,UACE,uBACEC,KAAK,WACLC,SAAUH,EAAMI,aAChBC,eAAgBL,EAAMM,YAExB,uBAAOL,UAAWD,EAAMM,UAAY,eAAiB,cAArD,SACGN,EAAMO,cAET,sBAAMC,QAASR,EAAMS,WAArB,sBCISC,EAlBG,CAChB,CACEC,GAAI,EACJC,KAAM,2BACNN,WAAW,GAEb,CACEK,GAAI,EACJC,KAAM,oBACNN,WAAW,GAEb,CACEK,GAAI,EACJC,KAAM,oBACNN,WAAW,ICiFAO,EA1FH,WACV,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,UAAYR,EAC7D,EAAkCS,mBAASL,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRP,aAAaQ,QAAQ,OAAQV,KAAKW,UAAUN,MAC3C,CAACA,IAEJ,IAYMO,EAAQ,SAAAC,GACZ,GAAIA,EAAMC,OAAQ,CAGhB,IAFA,IAAIC,EAAIF,EAAMC,OAAS,EACnBE,EAAM,EACHD,GACDF,EAAME,GAAGnB,GAAKoB,IAAKA,EAAMH,EAAME,GAAGnB,IACtCmB,IAEF,OAAOC,EAAM,EACR,OAAO,GAuBVC,EAAcZ,EAAUa,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAK5B,aAC5C6B,EAAiBf,EAAUa,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAK5B,aAC/C8B,EAAa,sBAAIJ,GAAJ,YAAoBG,IAAgBE,KAAI,SAAAC,GACzD,OACE,cAAC,EAAD,CAEE/B,YAAa+B,EAAG1B,KAChBN,UAAWgC,EAAGhC,UACdF,aAAc,kBApDD,SAAAO,GACjB,IAAM4B,EAAQnB,EAAUiB,KAAI,SAAAG,GAAE,OAAIA,EAAG7B,MAAI8B,QAAQ9B,GAC7C+B,EAAO,YAAOtB,GAClBsB,EAAQH,GAAOjC,UACVoC,EAAQH,GAAOjC,WAAY,EAC3BoC,EAAQH,GAAOjC,WAAY,EAChCe,EAAaqB,GA8CWC,CAAWL,EAAG3B,KAClCF,WAAY,kBAhBI,SAAAE,GACpB,IAAM4B,EAAQnB,EAAUiB,KAAI,SAAAG,GAAE,OAAIA,EAAG7B,MAAI8B,QAAQ9B,GAE3CiC,EADQ,YAAOxB,GACGa,QAAO,SAACO,EAAIK,GAAL,OAAaA,IAAQN,KACpDlB,EAAauB,GAYSE,CAAcR,EAAG3B,MAJ9B2B,EAAG3B,OASd,OACE,sBAAKV,UAAU,MAAf,UACE,+CACA,sBAAKA,UAAU,gBAAf,UACE,uBACEA,UAAU,aACVE,SAxDa,SAAA4C,GACnB,IAAIC,EAAaD,EAAEE,OAAOC,MAC1B3B,EAAWyB,IAuDLE,MAAO5B,EACPpB,KAAK,OACLiD,YAAY,yBAEd,uBACElD,UAAU,YACVC,KAAK,SACLM,QAhDW,WACjB,GAAIc,EAAS,CACX,IAAM8B,EAAU,CACdzC,GAAIgB,EAAMP,GACVR,KAAMU,EACNhB,WAAW,GAET+C,EAAO,sBAAOjC,GAAP,CAAkBgC,IAC7B7B,EAAW,IACXF,EAAagC,KAwCTH,MAAM,WAGTd,MCpFPkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.07660b20.chunk.js","sourcesContent":["import React from 'react';\nimport './ToDoItem.scss';\n\nconst ToDoItem = props => {\n  return (\n    <div className='todo_item'>\n      <input\n        type='checkbox'\n        onChange={props.handleChange}\n        defaultChecked={props.completed}\n      />\n      <label className={props.completed ? 'desc_checked' : 'description'}>\n        {props.description}\n      </label>\n      <span onClick={props.removeItem}>&times;</span>\n    </div>\n  );\n};\n\nexport default ToDoItem;\n","const todosData = [\n  {\n    id: 1,\n    text: 'Take a cup of hot coffee',\n    completed: true,\n  },\n  {\n    id: 2,\n    text: 'Cook tasty dinner',\n    completed: false,\n  },\n  {\n    id: 3,\n    text: 'Meet with friends',\n    completed: false,\n  },\n];\n\nexport default todosData;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ToDoItem from './toDo/ToDoItem/ToDoItem';\nimport todosData from './toDo/todosData';\n\nconst App = () => {\n  const dataList = JSON.parse(localStorage.getItem('list')) || todosData;\n  const [todoItems, setTodoItems] = useState(dataList);\n  const [newTask, setNewTask] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(todoItems));\n  }, [todoItems]);\n\n  const listChange = id => {\n    const index = todoItems.map(el => el.id).indexOf(id);\n    let newList = [...todoItems];\n    newList[index].completed\n      ? (newList[index].completed = false)\n      : (newList[index].completed = true);\n    setTodoItems(newList);\n  };\n  const inputHandler = e => {\n    let inputValue = e.target.value;\n    setNewTask(inputValue);\n  };\n  const newId = array => {\n    if (array.length) {\n      let i = array.length - 1;\n      let max = 0;\n      while (i) {\n        if (array[i].id > max) max = array[i].id;\n        i--;\n      }\n      return max + 1;\n    } else return 1;\n  };\n\n  const addNewTask = () => {\n    if (newTask) {\n      const objTask = {\n        id: newId(todoItems),\n        text: newTask,\n        completed: false,\n      };\n      let updList = [...todoItems, objTask];\n      setNewTask('');\n      setTodoItems(updList);\n    }\n  };\n\n  const removeHandler = id => {\n    const index = todoItems.map(el => el.id).indexOf(id);\n    const newArray = [...todoItems];\n    const result = newArray.filter((el, ind) => ind !== index);\n    setTodoItems(result);\n  };\n\n  const activeTasks = todoItems.filter(task => task.completed === false);\n  const completedTasks = todoItems.filter(task => task.completed === true);\n  const finalTasks = [...activeTasks, ...completedTasks].map(it => {\n    return (\n      <ToDoItem\n        key={it.id}\n        description={it.text}\n        completed={it.completed}\n        handleChange={() => listChange(it.id)}\n        removeItem={() => removeHandler(it.id)}\n      />\n    );\n  });\n\n  return (\n    <div className='App'>\n      <h1>My To-Do List</h1>\n      <div className='input_wrapper'>\n        <input\n          className='input_item'\n          onChange={inputHandler}\n          value={newTask}\n          type='text'\n          placeholder='Enter your task here'\n        />\n        <input\n          className='input_btn'\n          type='submit'\n          onClick={addNewTask}\n          value='Add'\n        />\n      </div>\n      {finalTasks}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals(console.log);\n"],"sourceRoot":""}